
volumes:
  core_imo_postgres_data_dois: {}
  core_imo_postgres_data_dois_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: core_imo_django
    container_name: core_imo_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: core_production_postgres
    container_name: core_imo_postgres
    volumes:
      - core_imo_postgres_data_dois:/var/lib/postgresql/data
      - core_imo_postgres_data_dois_backups:/backups
    env_file:
      - ./.envs/.local/.postgres


  redis:
    image: docker.io/redis:6
    container_name: core_imo_redis

  celeryworker:
    <<: *django
    image: core_imo_celeryworker
    container_name: core_imo_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: core_imo_celerybeat
    container_name: core_imo_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: core_imo_flower
    container_name: core_imo_flower
    ports:
      - '5555:5555'
    command: /start-flower

  frontend:
    build:
      context: ./frontend
      dockerfile: ../compose/local/frontend/Dockerfile
    image: core_imo_frontend
    container_name: core_imo_frontend
    ports:
      - '4200:4200'  # Porta 4200 mapeada para a porta 80 do container (porta padrÃ£o do Nginx)
    depends_on:
      - django
